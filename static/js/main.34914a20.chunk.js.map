{"version":3,"sources":["atoms.tsx","CreateToDo.tsx","ToDo.tsx","ToDoList.tsx","App.tsx","index.tsx","theme.ts"],"names":["Categories","categoryState","atom","key","default","TO_DO","localStorageToDos","localStorage","getItem","parsedToDos","JSON","parse","toDoState","toDoSelector","selector","get","toDos","category","filter","toDo","CreateToDos","useRecoilState","ToDos","setToDos","useRecoilValue","useForm","register","handleSubmit","setValue","useEffect","setItem","stringify","onSubmit","prev","text","id","Date","now","required","placeholder","ToDo","onClick","newCategory","targetIndex","findIndex","newToDo","DELETE","slice","DOING","DONE","Wrap","styled","div","ToDoList","setCategory","value","onInput","e","target","CreateToDo","map","GlobalStyle","createGlobalStyle","props","theme","bgColor","textColor","App","ReactDOM","render","StrictMode","accentColor","document","getElementById"],"mappings":"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","file":"static/js/main.34914a20.chunk.js","sourcesContent":["import { atom, selector } from \"recoil\";\r\n\r\nexport enum Categories {\r\n  \"TO_DO\" = \"TO_DO\",\r\n  \"DOING\" = \"DOING\",\r\n  \"DONE\" = \"DONE\",\r\n  \"DELETE\" = \"DELETE\",\r\n}\r\nexport interface IToDo {\r\n  text: string;\r\n  id: number;\r\n  category: Categories;\r\n}\r\n\r\nexport const categoryState = atom<Categories>({\r\n  key: \"category\",\r\n  default: Categories.TO_DO,\r\n});\r\n\r\nconst localStorageToDos = localStorage.getItem(\"ToDos\");\r\nconst parsedToDos = JSON.parse(localStorageToDos as any);\r\n\r\nexport const toDoState = atom<IToDo[]>({\r\n  key: \"toDo\",\r\n  default: parsedToDos ? parsedToDos : [],\r\n});\r\n\r\nexport const toDoSelector = selector({\r\n  key: \"toDoSelector\",\r\n  get: ({ get }) => {\r\n    const toDos = get(toDoState);\r\n    const category = get(categoryState);\r\n    return toDos.filter((toDo) => toDo.category === category);\r\n  },\r\n});\r\n","import { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useRecoilValue, useRecoilState } from \"recoil\";\r\nimport { categoryState, toDoState } from \"./atoms\";\r\n\r\ninterface IForm {\r\n  toDo: string;\r\n}\r\n\r\nconst CreateToDos = () => {\r\n  const [ToDos, setToDos] = useRecoilState(toDoState);\r\n  const category = useRecoilValue(categoryState);\r\n  const { register, handleSubmit, setValue } = useForm<IForm>();\r\n  const handleValid = ({ toDo }: IForm) => {\r\n    setToDos((prev) => [...prev, { text: toDo, id: Date.now(), category }]);\r\n    setValue(\"toDo\", \"\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"ToDos\", JSON.stringify(ToDos));\r\n  }, [ToDos]);\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(handleValid)}>\r\n      <input\r\n        {...register(\"toDo\", { required: \"Please write a To Do\" })}\r\n        placeholder=\"Write a to do\"\r\n      />\r\n      <button>Add</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateToDos;\r\n","import { useEffect } from \"react\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { Categories, IToDo, toDoState } from \"./atoms\";\r\n\r\nconst ToDo = ({ text, category, id }: IToDo) => {\r\n  const [ToDos, setToDos] = useRecoilState(toDoState);\r\n  const onClick = (newCategory: IToDo[\"category\"]) => {\r\n    let result = [];\r\n    setToDos((prev) => {\r\n      const targetIndex = prev.findIndex((toDo) => toDo.id === id);\r\n      const newToDo = { text, id, category: newCategory };\r\n\r\n      // 삭제\r\n      if (newCategory === Categories.DELETE) {\r\n        result = [\r\n          ...prev.slice(0, targetIndex),\r\n          ...prev.slice(targetIndex + 1),\r\n        ];\r\n        return result;\r\n      }\r\n      result = [\r\n        ...prev.slice(0, targetIndex),\r\n        newToDo,\r\n        ...prev.slice(targetIndex + 1),\r\n      ];\r\n      return result;\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"ToDos\", JSON.stringify(ToDos));\r\n  }, [ToDos]);\r\n\r\n  return (\r\n    <li>\r\n      <span>{text} </span>\r\n      {category !== Categories.DOING && (\r\n        <button onClick={() => onClick(Categories.DOING)}>Doing</button>\r\n      )}\r\n      {category !== Categories.TO_DO && (\r\n        <button onClick={() => onClick(Categories.TO_DO)}>To Do</button>\r\n      )}\r\n      {category !== Categories.DONE && (\r\n        <button onClick={() => onClick(Categories.DONE)}>Done</button>\r\n      )}\r\n      <button onClick={() => onClick(Categories.DELETE)}>Delete</button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ToDo;\r\n","import { useRecoilState, useRecoilValue } from \"recoil\";\r\nimport { Categories, categoryState, toDoSelector } from \"./atoms\";\r\nimport CreateToDo from \"./CreateToDo\";\r\nimport ToDo from \"./ToDo\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrap = styled.div`\r\n  padding: 2em 1em;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  text-align: center;\r\n\r\n  & ul {\r\n    margin: 1em 0;\r\n    padding: 0;\r\n\r\n    & li {\r\n      list-style: none;\r\n    }\r\n  }\r\n\r\n  & * + * {\r\n    margin-top: 0.5em;\r\n  }\r\n`;\r\n\r\nconst ToDoList = () => {\r\n  const [category, setCategory] = useRecoilState(categoryState);\r\n  const toDos = useRecoilValue(toDoSelector);\r\n\r\n  const onInput = (event: any) => {\r\n    setCategory(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Wrap>\r\n      <div>\r\n        <h1>To Dos</h1>\r\n        <hr />\r\n      </div>\r\n      <select value={category} onInput={(e) => onInput(e)}>\r\n        <option value={Categories.TO_DO}>To Do</option>\r\n        <option value={Categories.DOING}>Doing</option>\r\n        <option value={Categories.DONE}>Done</option>\r\n      </select>\r\n      <CreateToDo />\r\n      <ul>\r\n        {toDos.map((toDo) => (\r\n          <ToDo key={toDo.id} {...toDo} />\r\n        ))}\r\n      </ul>\r\n    </Wrap>\r\n  );\r\n};\r\n\r\nexport default ToDoList;\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport ToDoList from \"./ToDoList\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  font-family: 'Noto Sans KR', sans-serif;\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  color: ${(props) => props.theme.textColor};\r\n}\r\na {\r\n  text-decoration: none;\r\n  color: inherit;\r\n}\r\n`;\r\n\r\nconst App = () => {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <ToDoList />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport App from \"./App\";\r\nimport { darkTheme } from \"./theme\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <ThemeProvider theme={darkTheme}>\r\n        <App />\r\n      </ThemeProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nconst darkTheme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"#f5f6fa\",\r\n  accentColor: \"#8866ee\",\r\n};\r\n\r\nexport { darkTheme };\r\n"],"sourceRoot":""}