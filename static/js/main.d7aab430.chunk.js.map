{"version":3,"sources":["routes/Price.tsx","routes/Chart.tsx","api.ts","routes/Coin.tsx","routes/Coins.tsx","Router.tsx","App.tsx","index.tsx","theme.ts"],"names":["_","BASE_URL","fetchCoins","fetch","then","response","json","Container","styled","div","Header","header","Title","h1","props","theme","accentColor","Loading","MainInfo","Description","p","Tabs","Tab","isActive","textColor","coinId","useParams","state","useLocation","priceMatch","useMatch","chartMatch","console","log","useQuery","fetchCoinInfo","infoLoading","isLoading","infoData","data","fetchCoinTickers","tickersLoading","tickersData","loading","name","rank","symbol","open_source","description","total_supply","max_supply","to","path","element","Chart","Price","CoinsList","ul","Coin","li","porps","bgColor","Img","img","slice","map","coin","id","src","toLowerCase","alt","Coins","GlobalStyle","createGlobalStyle","Router","initialIsOpen","queryClient","QueryClient","ReactDOM","render","StrictMode","client","App","document","getElementById"],"mappings":"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","file":"static/js/main.d7aab430.chunk.js","sourcesContent":["const _ = () => {\r\n  return <h1>Price</h1>;\r\n};\r\n\r\nexport default _;\r\n","const _ = () => {\r\n  return <h1>Chart</h1>;\r\n};\r\n\r\nexport default _;\r\n","const BASE_URL = `https://api.coinpaprika.com/v1`;\r\n\r\nexport function fetchCoins() {\r\n  return fetch(`${BASE_URL}/coins`).then((response) => response.json());\r\n}\r\n\r\nexport function fetchCoinInfo(coinId: string) {\r\n  return fetch(`${BASE_URL}/coins/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n\r\nexport function fetchCoinTickers(coinId: string) {\r\n  return fetch(`${BASE_URL}/tickers/${coinId}`).then((response) =>\r\n    response.json()\r\n  );\r\n}\r\n","import {\r\n  Link,\r\n  Routes,\r\n  useMatch,\r\n  Route,\r\n  useLocation,\r\n  useParams,\r\n} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nimport Price from \"./Price\";\r\nimport Chart from \"./Chart\";\r\nimport { useQuery } from \"react-query\";\r\nimport { fetchCoinInfo, fetchCoinTickers } from \"../api\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0 20px;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\nconst Loading = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst MainInfo = styled.div`\r\n  margin-top: 2em;\r\n  padding: 1em 2em;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  text-align: center;\r\n  background: rgba(0, 0, 0, 0.2);\r\n  border-radius: 10px;\r\n\r\n  & > div {\r\n    min-width: 12%;\r\n  }\r\n\r\n  & strong {\r\n    display: block;\r\n    text-transform: uppercase;\r\n    font-size: 10px;\r\n  }\r\n  & span {\r\n    margin-top: 1em;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  margin-top: 2em;\r\n  line-height: 1.6;\r\n`;\r\n\r\nconst Tabs = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  margin: 2em 0;\r\n  gap: 1em;\r\n`;\r\n\r\nconst Tab = styled.div<{ isActive: boolean }>`\r\n  text-align: center;\r\n  text-transform: uppercase;\r\n  & a {\r\n    padding: 1em 0;\r\n    display: block;\r\n    border-radius: 10px;\r\n    background-color: rgba(0, 0, 0, 0.5);\r\n    color: ${(props) =>\r\n      props.isActive ? props.theme.accentColor : props.theme.textColor};\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\ninterface InfoInterface {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n  contract: string;\r\n  platform: string;\r\n  contracts: object;\r\n  parent: object;\r\n  description: string;\r\n  message: string;\r\n  open_source: boolean;\r\n  started_at: string;\r\n  development_status: string;\r\n  hardware_wallet: boolean;\r\n  proof_type: string;\r\n  org_structure: string;\r\n  hash_algorithm: string;\r\n  first_data_at: string;\r\n  last_data_at: string;\r\n}\r\n\r\ninterface PriceDataInterface {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  circulating_supply: number;\r\n  total_supply: number;\r\n  max_supply: number;\r\n  beta_value: number;\r\n  first_data_at: string;\r\n  last_updated: string;\r\n  quotes: {\r\n    USD: {\r\n      ath_date: number;\r\n      ath_price: number;\r\n      market_cap: number;\r\n      market_cap_change_24h: number;\r\n      percent_change_1h: number;\r\n      percent_change_1y: number;\r\n      percent_change_6h: number;\r\n      percent_change_7d: number;\r\n      percent_change_12h: number;\r\n      percent_change_15m: number;\r\n      percent_change_24h: number;\r\n      percent_change_30d: number;\r\n      percent_change_30m: number;\r\n      percent_from_price_ath: number;\r\n      price: number;\r\n      volume_24h: number;\r\n      volume_24h_change_24h: number;\r\n    };\r\n  };\r\n}\r\ninterface RouteParams {\r\n  coinId: string;\r\n}\r\ninterface RouteState {\r\n  name: string;\r\n}\r\nconst _ = () => {\r\n  const { coinId } = useParams<RouteParams>();\r\n  const { state } = useLocation<RouteState>();\r\n  const priceMatch = useMatch(\"/:coinId/price\");\r\n  const chartMatch = useMatch(\"/:coinId/chart\");\r\n  console.log(chartMatch || priceMatch);\r\n  console.log(typeof coinId);\r\n\r\n  const { isLoading: infoLoading, data: infoData } = useQuery<InfoInterface>(\r\n    [\"info\", coinId],\r\n    () => fetchCoinInfo(coinId)\r\n  );\r\n  const { isLoading: tickersLoading, data: tickersData } =\r\n    useQuery<PriceDataInterface>([\"tickers\", coinId], () =>\r\n      fetchCoinTickers(coinId)\r\n    );\r\n\r\n  const loading = infoLoading || tickersLoading;\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Header>\r\n          <Title>\r\n            {state?.name ? state.name : loading ? \"Loading...\" : infoData?.name}\r\n          </Title>\r\n        </Header>\r\n        {loading ? (\r\n          <Loading>Loading...</Loading>\r\n        ) : (\r\n          <>\r\n            <MainInfo>\r\n              <div>\r\n                <strong>RANK:</strong>\r\n                <span>{tickersData?.rank}</span>\r\n              </div>\r\n              <div>\r\n                <strong>SYMBOL:</strong>\r\n                <span>{tickersData?.symbol}</span>\r\n              </div>\r\n              <div>\r\n                <strong>OPEN SOURCE:</strong>\r\n                <span>{infoData?.open_source ? \"Yes\" : \"No\"}</span>\r\n              </div>\r\n            </MainInfo>\r\n            <Description>{infoData?.description}</Description>\r\n            <MainInfo>\r\n              <div>\r\n                <strong>TOTAL SUPLY:</strong>\r\n                <span>{tickersData?.total_supply}</span>\r\n              </div>\r\n              <div>\r\n                <strong>MAX SUPPLY:</strong>\r\n                <span>{tickersData?.max_supply}</span>\r\n              </div>\r\n            </MainInfo>\r\n            <Tabs>\r\n              <Tab isActive={chartMatch !== null}>\r\n                <Link to=\"chart\">Chart</Link>\r\n              </Tab>\r\n              <Tab isActive={priceMatch !== null}>\r\n                <Link to=\"price\">Price</Link>\r\n              </Tab>\r\n            </Tabs>\r\n\r\n            <Routes>\r\n              <Route path={`chart`} element={<Chart />} />\r\n              <Route path={`price`} element={<Price />} />\r\n            </Routes>\r\n          </>\r\n        )}\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default _;\r\n","import { useQuery } from \"react-query\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { fetchCoins } from \"../api\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0 20px;\r\n`;\r\n\r\nconst Header = styled.header`\r\n  height: 10vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst CoinsList = styled.ul`\r\n  margin: 0;\r\n  padding: 0;\r\n`;\r\n\r\nconst Coin = styled.li`\r\n  margin-bottom: 15px;\r\n  background-color: white;\r\n  color: ${(porps) => porps.theme.bgColor};\r\n  border-radius: 15px;\r\n\r\n  a {\r\n    padding: 20px;\r\n    display: flex;\r\n    transition: color 0.2s ease-in;\r\n    align-items: center;\r\n  }\r\n\r\n  &:hover {\r\n    a {\r\n      color: ${(props) => props.theme.accentColor};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  font-size: 48px;\r\n  color: ${(props) => props.theme.accentColor};\r\n`;\r\n\r\ninterface ICoin {\r\n  id: string;\r\n  name: string;\r\n  symbol: string;\r\n  rank: number;\r\n  is_new: boolean;\r\n  is_active: boolean;\r\n  type: string;\r\n}\r\n\r\nconst Loading = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  margin-right: 1em;\r\n  width: 35px;\r\n  height: 35px;\r\n`;\r\n\r\nconst _ = () => {\r\n  const { isLoading, data } = useQuery<ICoin[]>(\"allCoins\", fetchCoins);\r\n  // const [coins, setCoins] = useState<ICoin[]>([]);\r\n  // const [loading, setLoading] = useState(true);\r\n\r\n  // useEffect(() => {\r\n  //   (async () => {\r\n  //     const response = await fetch(\"https://api.coinpaprika.com/v1/coins\");\r\n  //     const json = await response.json();\r\n  //     setCoins(json.slice(0, 100));\r\n  //     setLoading(false);\r\n  //   })();\r\n  // }, []);\r\n\r\n  return (\r\n    <Container>\r\n      <Header>\r\n        <Title>코인</Title>\r\n      </Header>\r\n      {isLoading ? (\r\n        <Loading>Loading...</Loading>\r\n      ) : (\r\n        <CoinsList>\r\n          {data?.slice(0, 100).map((coin) => (\r\n            <Coin key={coin.id}>\r\n              <Link to={`/${coin.id}`} state={{ name: coin.name }}>\r\n                <Img\r\n                  src={`https://cryptoicon-api.vercel.app/api/icon/${coin.symbol.toLowerCase()}`}\r\n                  alt=\"\"\r\n                />\r\n                {coin.name} &rarr;\r\n              </Link>\r\n            </Coin>\r\n          ))}\r\n        </CoinsList>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default _;\r\n","import { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport Coin from \"./routes/Coin\";\r\nimport Coins from \"./routes/Coins\";\r\n\r\nconst _ = () => {\r\n  return (\r\n    <>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Coins />} />\r\n          <Route path=\"/:coinId/*\" element={<Coin />} />\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default _;\r\n","import Router from \"./Router\";\r\nimport { createGlobalStyle } from \"styled-components\";\r\nimport { ReactQueryDevtools } from \"react-query/devtools\";\r\nconst GlobalStyle = createGlobalStyle`\r\n/* http://meyerweb.com/eric/tools/css/reset/ \r\n   v2.0 | 20110126\r\n   License: none (public domain)\r\n*/\r\n@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+KR&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed, \r\nfigure, figcaption, footer, header, hgroup, \r\nmenu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n\tmargin: 0;\r\n\tpadding: 0;\r\n\tborder: 0;\r\n\tfont-size: 100%;\r\n\tfont: inherit;\r\n\tvertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure, \r\nfooter, header, hgroup, menu, nav, section {\r\n\tdisplay: block;\r\n}\r\nbody {\r\n\tline-height: 1;\r\n}\r\nol, ul {\r\n\tlist-style: none;\r\n}\r\nblockquote, q {\r\n\tquotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n\tcontent: '';\r\n\tcontent: none;\r\n}\r\ntable {\r\n\tborder-collapse: collapse;\r\n\tborder-spacing: 0;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  font-family: 'Noto Sans KR', sans-serif;\r\n  background-color: ${(props) => props.theme.bgColor};\r\n  color: ${(props) => props.theme.textColor};\r\n}\r\na {\r\n  text-decoration: none;\r\n  color: inherit;\r\n}\r\n`;\r\nconst _ = () => {\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Router />\r\n      <ReactQueryDevtools initialIsOpen={true} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default _;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { theme } from \"./theme\";\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={queryClient}>\n      <ThemeProvider theme={theme}>\n        <App />\n      </ThemeProvider>\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nconst theme: DefaultTheme = {\r\n  bgColor: \"#2f3640\",\r\n  textColor: \"#f5f6fa\",\r\n  accentColor: \"#8866ee\",\r\n};\r\n\r\nexport { theme };\r\n"],"sourceRoot":""}