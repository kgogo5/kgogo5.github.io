{"version":3,"sources":["Components/Header.tsx","api.ts","utils.ts","Routes/Home.tsx","Routes/Search.tsx","Routes/Tv.tsx","App.tsx","index.tsx","theme.ts"],"names":["Nav","styled","motion","nav","Col","div","Logo","svg","props","theme","red","Items","ul","Item","li","white","darker","lighter","Search","form","Circle","span","Input","input","logoVariants","normal","fillOpacity","active","transition","repeat","Infinity","navVariants","top","backgroundColor","scroll","Header","useState","searchOpen","setSearchOpen","homeMatch","useMatch","tvMatch","inputAnimation","useAnimation","navAnimation","scrollY","useViewportScroll","useEffect","onChange","get","start","navigate","useNavigate","useForm","register","handleSubmit","variants","animate","initial","whileHover","xmlns","width","height","viewBox","path","d","to","layoutId","onSubmit","data","keyword","onClick","scaleX","prev","x","type","fill","fillRule","clipRule","required","minLength","placeholder","API_KEY","BASE_PATH","getMovies","axios","then","response","getTvAiringToday","getTvPopular","getTvTopRated","makeImagePath","id","format","Wrapper","Loader","Banner","bgPhoto","Title","h2","Overview","p","Slider","Row","Box","Info","black","Overlay","BigMovie","BigCover","BigTitle","h3","BigOverview","rowVariants","hidden","window","outerWidth","visible","exit","boxVariants","scale","hover","y","delay","duaration","infoVariants","opacity","Home","bigMovieMatch","useQuery","isLoading","index","setIndex","leaving","setLeaving","toggleLeaving","clickedMovie","params","movieId","results","find","movie","String","totalMovies","length","maxIndex","Math","floor","backdrop_path","title","overview","AnimatePresence","onExitComplete","duration","slice","map","style","backgroundImage","ListWrap","ImgBox","h1","location","useLocation","URLSearchParams","search","tv_id","tvData","item","src","poster_path","alt","Section","TitleArea","Button","button","Tv","latest","today","topRated","console","log","todayState","setTodayState","topRatedState","setTopRatedState","incraseIndex","items","onBoxClicked","tvId","onOverlayClick","clickedTopReated","tv","name","App","element","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","StrictMode","veryDark","document","getElementById"],"mappings":"wQAMMA,EAAMC,YAAOC,IAAOC,IAAdF,CAAH,oNAYHG,EAAMH,IAAOI,IAAV,sEAKHC,EAAOL,YAAOC,IAAOK,IAAdN,CAAH,+JAIA,SAACO,GAAD,OAAWA,EAAMC,MAAMC,OAO3BC,EAAQV,IAAOW,GAAV,sEAKLC,EAAOZ,IAAOa,GAAV,4OAEC,SAACN,GAAD,OAAWA,EAAMC,MAAMM,MAAMC,UAO3B,SAACR,GAAD,OAAWA,EAAMC,MAAMM,MAAME,WAIpCC,EAASjB,IAAOkB,KAAV,+IAUNC,EAASnB,YAAOC,IAAOmB,KAAdpB,CAAH,0KAQU,SAACO,GAAD,OAAWA,EAAMC,MAAMC,OAGvCY,EAAQrB,YAAOC,IAAOqB,MAAdtB,CAAH,mQAUW,SAACO,GAAD,OAAWA,EAAMC,MAAMM,MAAME,WAG7CO,EAAe,CACnBC,OAAQ,CACNC,YAAa,GAEfC,OAAQ,CACND,YAAa,CAAC,EAAG,EAAG,GACpBE,WAAY,CACVC,OAAQC,OAKRC,EAAc,CAClBC,IAAK,CACHC,gBAAiB,oBAEnBC,OAAQ,CACND,gBAAiB,qBA8FNE,I,4BAAAA,EAtFf,WACE,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAYC,YAAS,KACrBC,EAAUD,YAAS,OACnBE,EAAiBC,cACjBC,EAAeD,cACbE,EAAYC,cAAZD,QAWRE,qBAAU,WACRF,EAAQG,UAAS,WACXH,EAAQI,MAAQ,GAClBL,EAAaM,MAAM,UAEnBN,EAAaM,MAAM,YAGtB,CAACL,EAASD,IAEb,IAAMO,EAAWC,cACjB,EAAmCC,cAA3BC,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAIlB,OACE,eAACvD,EAAD,CAAKwD,SAAUzB,EAAa0B,QAASb,EAAcc,QAAS,MAA5D,UACE,eAACtD,EAAD,WACE,cAACE,EAAD,CACEkD,SAAUhC,EACVmC,WAAW,SACXF,QAAQ,SACRG,MAAM,6BACNC,MAAM,OACNC,OAAO,UACPC,QAAQ,mBAPV,SASE,cAAC7D,EAAA,EAAO8D,KAAR,CAAaC,EAAE,m+BAEjB,eAACtD,EAAD,WACE,cAACE,EAAD,UACE,eAAC,IAAD,CAAMqD,GAAG,IAAT,kBAAmB3B,GAAa,cAACnB,EAAD,CAAQ+C,SAAS,gBAEnD,cAACtD,EAAD,UACE,eAAC,IAAD,CAAMqD,GAAG,MAAT,sBACYzB,GAAW,cAACrB,EAAD,CAAQ+C,SAAS,sBAK9C,cAAC/D,EAAD,UACE,eAACc,EAAD,CAAQkD,SAAUb,GA7BR,SAACc,GACflB,EAAS,mBAAD,OAAoBkB,EAAKC,aA4B7B,UACE,cAACpE,EAAA,EAAOK,IAAR,CACEgE,QArDW,WACflC,EACFK,EAAeQ,MAAM,CACnBsB,OAAQ,IAGV9B,EAAeQ,MAAM,CAAEsB,OAAQ,IAEjClC,GAAc,SAACmC,GAAD,OAAWA,MA8CjBhB,QAAS,CAAEiB,EAAGrC,GAAc,IAAM,GAClCT,WAAY,CAAE+C,KAAM,UACpBC,KAAK,eACLb,QAAQ,YACRH,MAAM,6BANR,SAQE,sBACEiB,SAAS,UACTZ,EAAE,mHACFa,SAAS,cAGb,cAACxD,EAAD,2BACMgC,EAAS,UAAW,CAAEyB,UAAU,EAAMC,UAAW,KADvD,IAEEvB,QAASf,EACTgB,QAAS,CAAEc,OAAQ,GACnB5C,WAAY,CAAE+C,KAAM,UACpBM,YAAY,6C,qCC3LlBC,GAAU,mCACVC,GAAY,+BAqBX,SAASC,KACd,OAAOC,KACJpC,IADI,UACGkC,GADH,sCAC0CD,KAC9CI,MAAK,SAACC,GAAD,OAAcA,EAASlB,QAS1B,SAASmB,KACd,OAAOH,KACJpC,IADI,UACGkC,GADH,oCACwCD,KAC5CI,MAAK,SAACC,GAAD,OAAcA,EAASlB,QAG1B,SAASoB,KACd,OAAOJ,KACJpC,IADI,UACGkC,GADH,+BACmCD,KACvCI,MAAK,SAACC,GAAD,OAAcA,EAASlB,QAG1B,SAASqB,KACd,OAAOL,KACJpC,IADI,UACGkC,GADH,iCACqCD,KACzCI,MAAK,SAACC,GAAD,OAAcA,EAASlB,QCnD1B,SAASsB,GAAcC,EAAYC,GACxC,MAAM,8BAAN,OAAqCA,GAAkB,WAAvD,YAAqED,GCOvE,IAAME,GAAU7F,IAAOI,IAAV,4EAKP0F,GAAS9F,IAAOI,IAAV,mHAOC2F,GAAS/F,IAAOI,IAAV,2OAMT,SAACG,GAAD,OAAWA,EAAMyF,WAIdC,GAAQjG,IAAOkG,GAAV,gDAILC,GAAWnG,IAAOoG,EAAV,wGAORC,GAASrG,IAAOI,IAAV,mEAKNkG,GAAMtG,YAAOC,IAAOG,IAAdJ,CAAH,6IAQHuG,GAAMvG,YAAOC,IAAOG,IAAdJ,CAAH,6UAEU,SAACO,GAAD,OAAWA,EAAMyF,WAe9BQ,GAAOxG,YAAOC,IAAOG,IAAdJ,CAAH,wMAEK,SAACO,GAAD,OAAWA,EAAMC,MAAMiG,MAAMzF,WAWtC0F,GAAU1G,YAAOC,IAAOG,IAAdJ,CAAH,oJASP2G,GAAW3G,YAAOC,IAAOG,IAAdJ,CAAH,wMASC,SAACO,GAAD,OAAWA,EAAMC,MAAMiG,MAAMzF,WAGtC4F,GAAW5G,IAAOI,IAAV,yKAURyG,GAAW7G,IAAO8G,GAAV,uFACV,SAACvG,GAAD,OAAWA,EAAMC,MAAMM,MAAME,WAK3B+F,GAAc/G,IAAOoG,EAAV,iyCAGb,SAAC7F,GAAD,OAAWA,EAAMC,MAAMM,MAAME,WAqClCgG,GAAc,CAClBC,OAAQ,CACNxC,EAAGyC,OAAOC,WAAa,GAEzBC,QAAS,CACP3C,EAAG,GAEL4C,KAAM,CACJ5C,GAAIyC,OAAOC,WAAa,IAItBG,GAAc,CAClB9F,OAAQ,CACN+F,MAAO,GAETC,MAAO,CACLD,MAAO,IACPE,GAAI,GACJ9F,WAAY,CACV+F,MAAO,GACPC,UAAW,GACXjD,KAAM,WAKNkD,GAAe,CACnBJ,MAAO,CACLK,QAAS,EACTlG,WAAY,CACV+F,MAAO,GACPC,UAAW,GACXjD,KAAM,WAuHGoD,I,YAAAA,GAhHf,WACE,IAAM5E,EAAWC,cACX4E,EAAgBxF,YAAS,oBACvBK,EAAYC,cAAZD,QACR,EAA4BoF,mBAC1B,CAAC,SAAU,cACX7C,IAFMf,EAAR,EAAQA,KAAM6D,EAAd,EAAcA,UAId,EAA0B9F,mBAAS,GAAnC,mBAAO+F,EAAP,KAAcC,EAAd,KACA,EAA8BhG,oBAAS,GAAvC,mBAAOiG,EAAP,KAAgBC,EAAhB,KAUMC,EAAgB,kBAAMD,GAAW,SAAC7D,GAAD,OAAWA,MAK5C+D,GACS,OAAbR,QAAa,IAAbA,OAAA,EAAAA,EAAeS,OAAOC,WAAtB,OACArE,QADA,IACAA,OADA,EACAA,EAAMsE,QAAQC,MACZ,SAACC,GAAD,OAAWA,EAAMjD,MAAQkD,OAAOd,EAAcS,OAAOC,aAEzD,OACE,cAAC5C,GAAD,UACGoC,EACC,cAACnC,GAAD,yBAEA,qCACE,eAACC,GAAD,CACEzB,QA1BW,WACnB,GAAIF,EAAM,CACR,GAAIgE,EAAS,OACbE,IACA,IAAMQ,EAAc1E,EAAKsE,QAAQK,OAAS,EACpCC,EAAWC,KAAKC,MAAMJ,EAjBnB,GAiB2C,EACpDX,GAAS,SAAC3D,GAAD,OAAWA,IAASwE,EAAW,EAAIxE,EAAO,OAqB7CwB,QAASN,IAAkB,OAAJtB,QAAI,IAAJA,OAAA,EAAAA,EAAMsE,QAAQ,GAAGS,gBAAiB,IAF3D,UAIE,cAAClD,GAAD,iBAAQ7B,QAAR,IAAQA,OAAR,EAAQA,EAAMsE,QAAQ,GAAGU,QACzB,cAACjD,GAAD,iBAAW/B,QAAX,IAAWA,OAAX,EAAWA,EAAMsE,QAAQ,GAAGW,cAE9B,cAAChD,GAAD,UAEE,cAACiD,EAAA,EAAD,CAAiB7F,SAAS,EAAO8F,eAAgBjB,EAAjD,SACE,cAAChC,GAAD,CACE/C,SAAUyD,GACVvD,QAAQ,SACRD,QAAQ,UACR6D,KAAK,OACL1F,WAAY,CAAE+C,KAAM,QAAS8E,SAAU,GALzC,gBAQGpF,QARH,IAQGA,OARH,EAQGA,EAAMsE,QACJe,MAAM,GACNA,MAzDJ,EAyDmBvB,EAzDnB,EAyDmCA,EAzDnC,GA0DIwB,KAAI,SAACd,GAAD,OACH,cAACrC,GAAD,CACErC,SAAU0E,EAAMjD,GAAK,GAErBK,QAASN,GAAckD,EAAMO,cAAe,QAC5C5F,SAAU+D,GACV5D,WAAW,QACXD,QAAQ,SACR9B,WAAY,CAAE+C,KAAM,SACpBJ,QAAS,kBA7CPmE,EA6C0BG,EAAMjD,GAAK,QA5CzDzC,EAAS,WAAD,OAAYuF,IADD,IAACA,GAqCJ,SAUE,cAACjC,GAAD,CAAMjD,SAAUqE,GAAhB,SACE,6BAAKgB,EAAMQ,WATRR,EAAMjD,QARZuC,OAwBX,cAACoB,EAAA,EAAD,UACGvB,EACC,qCACE,cAACrB,GAAD,CACEpC,QAxDO,kBAAMpB,EAAS,MAyDtBmE,KAAM,CAAEQ,QAAS,GACjBrE,QAAS,CAAEqE,QAAS,KAEtB,cAAClB,GAAD,CACEgD,MAAO,CAAE5H,IAAKa,EAAQI,MAAQ,KAC9BkB,SAAU6D,EAAcS,OAAOC,QAFjC,SAIGF,GACC,qCACE,cAAC3B,GAAD,CACE+C,MAAO,CACLC,gBAAgB,oDAAD,OAAsDlE,GACnE6C,EAAaY,cACb,QAFa,MAFnB,SAQE,cAACtC,GAAD,UAAW0B,EAAaa,UAG1B,cAACrC,GAAD,UAAcwB,EAAac,mBAKjC,aC5SVxD,GAAU7F,IAAOI,IAAV,wDAIPyJ,GAAW7J,IAAOW,GAAV,oJASRmJ,GAAS9J,IAAOI,IAAV,gHAQN6F,GAAQjG,IAAO+J,GAAV,iHAsDI9I,I,SAAAA,GA/Cf,WACE,IAAM+I,EAAWC,cACX5F,EAAU,IAAI6F,gBAAgBF,EAASG,QAAQnH,IAAI,WACzD,EAA4BgF,mBAAS,CAAC,QAAS,WAAW,kBHiB7BoC,EGhBZ/F,EHiBVe,KACJpC,IADI,UACGkC,GADH,iCACqCD,GADrC,kBACsDmF,EADtD,YAEJ/E,MAAK,SAACC,GAAD,OAAcA,EAASlB,QAH1B,IAAwBgG,KGjBrBhG,EAAR,EAAQA,KAAM6D,EAAd,EAAcA,UAGd,EAA+CD,mBAC7C,CAAC,KAAM,WACP,kBHkBwBoC,EGlBN/F,EHmBbe,KACJpC,IADI,UACGkC,GADH,8BACkCD,GADlC,kBACmDmF,EADnD,YAEJ/E,MAAK,SAACC,GAAD,OAAcA,EAASlB,QAH1B,IAAqBgG,KGpBZC,EAAd,EAAQjG,KAIR,OAJA,EAAsB6D,UAKpB,cAAC,GAAD,UACGA,EACC,aAEA,qCACE,cAAC,GAAD,2BACA,cAAC4B,GAAD,UACGzF,EAAKsE,QAAQK,QAAU,GACtB3E,EAAKsE,QAAQgB,KAAI,SAACY,GAAD,OACf,+BACE,cAACR,GAAD,UACE,qBAAKS,IAAK7E,GAAc4E,EAAKE,YAAa,QAASC,IAAI,OAEzD,8BAAMH,EAAKlB,gBAInB,uBAEA,cAAC,GAAD,wBACA,cAACS,GAAD,UACGQ,EAAO3B,QAAQK,QAAU,GACxBsB,EAAO3B,QAAQgB,KAAI,SAACY,GAAD,OACjB,+BACE,cAACR,GAAD,UACE,qBAAKS,IAAK7E,GAAc4E,EAAKE,YAAa,QAASC,IAAI,OAEzD,8BAAMH,EAAKlB,sBC7CvBsB,GAAU1K,IAAOI,IAAV,2FAMPuK,GAAY3K,IAAOI,IAAV,oMAYTwK,GAAS5K,IAAO6K,OAAV,qPAeN7D,GAAc,CAClBC,OAAQ,CACNxC,EAAGyC,OAAOC,WAAa,GAEzBC,QAAS,CACP3C,EAAG,GAEL4C,KAAM,CACJ5C,GAAIyC,OAAOC,WAAa,IAItBG,GAAc,CAClB9F,OAAQ,CACN+F,MAAO,GAETC,MAAO,CACLD,MAAO,IACPE,GAAI,GACJ9F,WAAY,CACV+F,MAAO,GACPC,UAAW,GACXjD,KAAM,WAKNkD,GAAe,CACnBJ,MAAO,CACLK,QAAS,EACTlG,WAAY,CACV+F,MAAO,GACPC,UAAW,GACXjD,KAAM,WA6QGoG,OAtQf,WAAe,IAAD,EACZ,EAAmD9C,mBACjD,CAAC,KAAM,UACP7C,IAFY4F,EAAd,EAAQ3G,KAIR,GAJA,EAAsB6D,UAI2BD,mBAC/C,CAAC,KAAM,SACPzC,KAFYyF,EAAd,EAAQ5G,KAIR,GAJA,EAAqB6D,UAIOD,mBAAS,CAAC,KAAM,WAAYxC,KAAhDpB,EAAR,EAAQA,KAAM6D,EAAd,EAAcA,UACd,EAAuDD,mBACrD,CAAC,KAAM,WACPvC,IAFYwF,EAAd,EAAQ7G,KAAR,EAAwB6D,UAIxBiD,QAAQC,IAAI/G,GACZ,IAAMlB,EAAWC,cACX4E,EAAgBxF,YAAS,aACvBK,EAAYC,cAAZD,QACR,EAA0BT,mBAAS,GAAnC,mBAAO+F,EAAP,KAAcC,EAAd,KACA,EAAoChG,mBAAS,GAA7C,mBAAOiJ,EAAP,KAAmBC,EAAnB,KACA,EAA0ClJ,mBAAS,GAAnD,mBAAOmJ,EAAP,KAAsBC,EAAtB,KACA,EAA8BpJ,oBAAS,GAAvC,mBAAOiG,EAAP,KAAgBC,EAAhB,KACMmD,EAAe,SAACC,EAAY/G,GAChC,GAAI+G,EAAO,CACT,GAAIrD,EAAS,OACbE,IACA,IAAMQ,EAAc2C,EAAM/C,QAAQK,OAAS,EACrCC,EAAWC,KAAKC,MAAMJ,EA7BnB,GA6B2C,EACvC,aAATpE,EACF6G,GAAiB,SAAC/G,GAAD,OAAWA,IAASwE,EAAW,EAAIxE,EAAO,KACzC,UAATE,EACT2G,GAAc,SAAC7G,GAAD,OAAWA,IAASwE,EAAW,EAAIxE,EAAO,KAExD2D,GAAS,SAAC3D,GAAD,OAAWA,IAASwE,EAAW,EAAIxE,EAAO,OAInD8D,EAAgB,kBAAMD,GAAW,SAAC7D,GAAD,OAAWA,MAC5CkH,EAAe,SAACC,GACpBzI,EAAS,OAAD,OAAQyI,KAEZC,EAAiB,kBAAM1I,EAAS,QAChCqF,GACS,OAAbR,QAAa,IAAbA,OAAA,EAAAA,EAAeS,OAAOmD,QAAtB,OACAvH,QADA,IACAA,OADA,EACAA,EAAMsE,QAAQC,MACZ,SAACC,GAAD,OAAgBA,EAAMjD,MAAQkD,OAAOd,EAAcS,OAAOmD,UAExDE,GACS,OAAb9D,QAAa,IAAbA,OAAA,EAAAA,EAAeS,OAAOmD,QAAtB,OACAV,QADA,IACAA,OADA,EACAA,EAAUvC,QAAQC,MAChB,SAACC,GAAD,OAAgBA,EAAMjD,MAAQkD,OAAOd,EAAcS,OAAOmD,UAE9D,OACE,mCACG1D,EACC,aAEA,qCACE,eAAClC,GAAD,CACEzB,QAASkH,EACTxF,QAASN,IAAc,UAAAqF,EAAOrC,QAAQ,UAAf,eAAmBS,gBAAiB,IAF7D,UAIE,cAAClD,GAAD,iBAAQ8E,QAAR,IAAQA,OAAR,EAAQA,EAAQrC,QAAQ,GAAGU,QAC3B,cAACjD,GAAD,iBAAW4E,QAAX,IAAWA,OAAX,EAAWA,EAAQrC,QAAQ,GAAGW,cAGhC,eAACqB,GAAD,WACE,eAACC,GAAD,WACE,8CACA,cAACC,GAAD,CAAQtG,QAAS,kBAAMkH,EAAaR,EAAO,UAA3C,qBAGF,cAAC3E,GAAD,UAEE,cAACiD,EAAA,EAAD,CAAiB7F,SAAS,EAAO8F,eAAgBjB,EAAjD,SACE,cAAChC,GAAD,CACE/C,SAAUyD,GACVvD,QAAQ,SACRD,QAAQ,UACR6D,KAAK,OACL1F,WAAY,CAAE+C,KAAM,QAAS8E,SAAU,GALzC,gBAQGwB,QARH,IAQGA,OARH,EAQGA,EAAOtC,QACLe,MAAM,GACNA,MAvFN,EAuFqB2B,EAvFrB,EAuF0CA,EAvF1C,GAwFM1B,KAAI,SAACoC,GAAD,OACH,cAACvF,GAAD,CACErC,SAAU4H,EAAGnG,GAAK,QAElBK,QAASN,GAAcoG,EAAG3C,cAAe,QACzC5F,SAAU+D,GACV5D,WAAW,QACXD,QAAQ,SACR9B,WAAY,CAAE+C,KAAM,SAPtB,SASE,cAAC8B,GAAD,CAAMjD,SAAUqE,GAAhB,SACE,6BAAKkE,EAAGC,UARLD,EAAGnG,QARTyF,UAyBb,eAACV,GAAD,WACE,eAACC,GAAD,WACE,yCACA,cAACC,GAAD,CAAQtG,QAAS,kBAAMkH,EAAapH,IAApC,qBAGF,cAACiC,GAAD,UAEE,cAACiD,EAAA,EAAD,CAAiB7F,SAAS,EAAO8F,eAAgBjB,EAAjD,SACE,cAAChC,GAAD,CACE/C,SAAUyD,GACVvD,QAAQ,SACRD,QAAQ,UACR6D,KAAK,OACL1F,WAAY,CAAE+C,KAAM,QAAS8E,SAAU,GALzC,gBAQGpF,QARH,IAQGA,OARH,EAQGA,EAAMsE,QACJe,MAAM,GACNA,MA/HN,EA+HqBvB,EA/HrB,EA+HqCA,EA/HrC,GAgIMwB,KAAI,SAACoC,GAAD,OACH,cAACvF,GAAD,CACErC,SAAU4H,EAAGnG,GAAK,UAElBK,QAASN,GAAcoG,EAAG3C,cAAe,QACzC5F,SAAU+D,GACV5D,WAAW,QACXD,QAAQ,SACR9B,WAAY,CAAE+C,KAAM,SACpBJ,QAAS,kBAAMoH,EAAaI,EAAGnG,GAAK,KARtC,SAUE,cAACa,GAAD,CAAMjD,SAAUqE,GAAhB,SACE,6BAAKkE,EAAGC,UATLD,EAAGnG,QARTuC,OAwBX,cAACoB,EAAA,EAAD,UACGvB,EACC,qCACE,cAACrB,GAAD,CACEpC,QAASsH,EACTvE,KAAM,CAAEQ,QAAS,GACjBrE,QAAS,CAAEqE,QAAS,KAEtB,cAAClB,GAAD,CACEgD,MAAO,CAAE5H,IAAKa,EAAQI,MAAQ,KAC9BkB,SAAU6D,EAAcS,OAAOmD,KAAO,UAFxC,SAIGpD,GACC,qCACE,cAAC3B,GAAD,CACE+C,MAAO,CACLC,gBAAgB,oDAAD,OAAsDlE,GACnE6C,EAAaY,cACb,QAFa,MAFnB,SAQE,cAACtC,GAAD,UAAW0B,EAAaa,UAG1B,cAACrC,GAAD,UAAcwB,EAAac,mBAKjC,UAIR,eAACqB,GAAD,WACE,eAACC,GAAD,WACE,2CACA,cAACC,GAAD,CAAQtG,QAAS,kBAAMkH,EAAaP,EAAU,aAA9C,qBAKF,cAAC5E,GAAD,UAEE,cAACiD,EAAA,EAAD,CAAiB7F,SAAS,EAAO8F,eAAgBjB,EAAjD,SACE,cAAChC,GAAD,CACE/C,SAAUyD,GACVvD,QAAQ,SACRD,QAAQ,UACR6D,KAAK,OACL1F,WAAY,CAAE+C,KAAM,QAAS8E,SAAU,GALzC,gBAQGyB,QARH,IAQGA,OARH,EAQGA,EAAUvC,QACRe,MAAM,GACNA,MA1MN,EA2MgB6B,EA3MhB,EA4MgBA,EA5MhB,GA8MM5B,KAAI,SAACoC,GAAD,OACH,cAACvF,GAAD,CACErC,SAAU4H,EAAGnG,GAAK,WAElBK,QAASN,GAAcoG,EAAG3C,cAAe,QACzC5F,SAAU+D,GACV5D,WAAW,QACXD,QAAQ,SACR9B,WAAY,CAAE+C,KAAM,SACpBJ,QAAS,kBAAMoH,EAAaI,EAAGnG,GAAK,KARtC,SAUE,cAACa,GAAD,CAAMjD,SAAUqE,GAAhB,SACE,6BAAKkE,EAAGC,UATLD,EAAGnG,QAXT2F,OA2BX,cAAChC,EAAA,EAAD,UACGvB,EACC,qCACE,cAACrB,GAAD,CACEpC,QAASsH,EACTvE,KAAM,CAAEQ,QAAS,GACjBrE,QAAS,CAAEqE,QAAS,KAEtB,cAAClB,GAAD,CACEgD,MAAO,CAAE5H,IAAKa,EAAQI,MAAQ,KAC9BkB,SAAU6D,EAAcS,OAAOmD,KAAO,WAFxC,SAIGE,GACC,qCACE,cAACjF,GAAD,CACE+C,MAAO,CACLC,gBAAgB,oDAAD,OAAsDlE,GACnEmG,EAAiB1C,cACjB,QAFa,MAFnB,SAQE,cAACtC,GAAD,UAAWgF,EAAiBzC,UAG9B,cAACrC,GAAD,UAAc8E,EAAiBxC,mBAKrC,UAGR,cAACqB,GAAD,UC7UKsB,I,GAAAA,GAjBf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOjI,KAAK,YAAYkI,QAAS,cAAC,GAAD,IAAjC,SACE,cAAC,IAAD,CAAOlI,KAAK,+BAEd,cAAC,IAAD,CAAOA,KAAK,cAAckI,QAAS,cAAC,GAAD,IAAnC,SACE,cAAC,IAAD,CAAOlI,KAAK,wBAEd,cAAC,IAAD,CAAOA,KAAK,kBAAkBkI,QAAS,cAAC,GAAD,aCTzCC,GAAcC,YAAH,0+CAuDP,SAAC5L,GAAD,OAAWA,EAAMC,MAAMM,MAAMC,UAUjCqL,GAAS,IAAIC,cAEnBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,sBAAD,CAAqBJ,OAAQA,GAA7B,SACE,eAAC,IAAD,CAAe5L,MC7EY,CACjCC,IAAK,UACLgG,MAAO,CACLgG,SAAU,UACV1L,OAAQ,UACRC,QAAS,WAEXF,MAAO,CACLE,QAAS,OACTD,OAAQ,YDoEJ,UACE,cAACmL,GAAD,IACA,cAAC,GAAD,aAKRQ,SAASC,eAAe,W","file":"static/js/main.cd00eafb.chunk.js","sourcesContent":["import { Link, useMatch, useNavigate } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport { motion, useAnimation, useViewportScroll } from \"framer-motion\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\n\r\nconst Nav = styled(motion.nav)`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  position: fixed;\r\n  width: 100%;\r\n  top: 0;\r\n  font-size: 14px;\r\n  padding: 20px 60px;\r\n  color: white;\r\n`;\r\n\r\nconst Col = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Logo = styled(motion.svg)`\r\n  margin-right: 50px;\r\n  width: 95px;\r\n  height: 25px;\r\n  fill: ${(props) => props.theme.red};\r\n  path {\r\n    stroke-width: 6px;\r\n    stroke: #ff0000;\r\n  }\r\n`;\r\n\r\nconst Items = styled.ul`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  margin-right: 20px;\r\n  color: ${(props) => props.theme.white.darker};\r\n  transition: color 0.3s ease-in-out;\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  &:hover {\r\n    color: ${(props) => props.theme.white.lighter};\r\n  }\r\n`;\r\n\r\nconst Search = styled.form`\r\n  color: white;\r\n  display: flex;\r\n  align-items: center;\r\n  position: relative;\r\n  svg {\r\n    height: 25px;\r\n  }\r\n`;\r\n\r\nconst Circle = styled(motion.span)`\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 3px;\r\n  bottom: -6px;\r\n  left: 0;\r\n  right: 0;\r\n  margin: 0 auto;\r\n  background-color: ${(props) => props.theme.red};\r\n`;\r\n\r\nconst Input = styled(motion.input)`\r\n  transform-origin: right center;\r\n  position: absolute;\r\n  right: 0px;\r\n  padding: 5px 10px;\r\n  padding-left: 40px;\r\n  z-index: -1;\r\n  color: white;\r\n  font-size: 16px;\r\n  background-color: transparent;\r\n  border: 1px solid ${(props) => props.theme.white.lighter};\r\n`;\r\n\r\nconst logoVariants = {\r\n  normal: {\r\n    fillOpacity: 1,\r\n  },\r\n  active: {\r\n    fillOpacity: [0, 1, 0],\r\n    transition: {\r\n      repeat: Infinity,\r\n    },\r\n  },\r\n};\r\n\r\nconst navVariants = {\r\n  top: {\r\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\r\n  },\r\n  scroll: {\r\n    backgroundColor: \"rgba(0, 0, 0, 1)\",\r\n  },\r\n};\r\n\r\ninterface IForm {\r\n  keyword: string;\r\n}\r\n\r\nfunction Header() {\r\n  const [searchOpen, setSearchOpen] = useState(false);\r\n  const homeMatch = useMatch(\"/\");\r\n  const tvMatch = useMatch(\"/tv\");\r\n  const inputAnimation = useAnimation();\r\n  const navAnimation = useAnimation();\r\n  const { scrollY } = useViewportScroll();\r\n  const toggleSearch = () => {\r\n    if (searchOpen) {\r\n      inputAnimation.start({\r\n        scaleX: 0,\r\n      });\r\n    } else {\r\n      inputAnimation.start({ scaleX: 1 });\r\n    }\r\n    setSearchOpen((prev) => !prev);\r\n  };\r\n  useEffect(() => {\r\n    scrollY.onChange(() => {\r\n      if (scrollY.get() > 80) {\r\n        navAnimation.start(\"scroll\");\r\n      } else {\r\n        navAnimation.start(\"top\");\r\n      }\r\n    });\r\n  }, [scrollY, navAnimation]);\r\n\r\n  const navigate = useNavigate();\r\n  const { register, handleSubmit } = useForm<IForm>();\r\n  const onValid = (data: IForm) => {\r\n    navigate(`/search?keyword=${data.keyword}`);\r\n  };\r\n  return (\r\n    <Nav variants={navVariants} animate={navAnimation} initial={\"top\"}>\r\n      <Col>\r\n        <Logo\r\n          variants={logoVariants}\r\n          whileHover=\"active\"\r\n          animate=\"normal\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n          width=\"1024\"\r\n          height=\"276.742\"\r\n          viewBox=\"0 0 1024 276.742\"\r\n        >\r\n          <motion.path d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\" />\r\n        </Logo>\r\n        <Items>\r\n          <Item>\r\n            <Link to=\"/\">Home {homeMatch && <Circle layoutId=\"circle\" />}</Link>\r\n          </Item>\r\n          <Item>\r\n            <Link to=\"/tv\">\r\n              Tv Shows {tvMatch && <Circle layoutId=\"circle\" />}\r\n            </Link>\r\n          </Item>\r\n        </Items>\r\n      </Col>\r\n      <Col>\r\n        <Search onSubmit={handleSubmit(onValid)}>\r\n          <motion.svg\r\n            onClick={toggleSearch}\r\n            animate={{ x: searchOpen ? -215 : 0 }}\r\n            transition={{ type: \"linear\" }}\r\n            fill=\"currentColor\"\r\n            viewBox=\"0 0 20 20\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <path\r\n              fillRule=\"evenodd\"\r\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\r\n              clipRule=\"evenodd\"\r\n            ></path>\r\n          </motion.svg>\r\n          <Input\r\n            {...register(\"keyword\", { required: true, minLength: 2 })}\r\n            animate={inputAnimation}\r\n            initial={{ scaleX: 0 }}\r\n            transition={{ type: \"linear\" }}\r\n            placeholder=\"Search for movie or tv show...\"\r\n          />\r\n        </Search>\r\n      </Col>\r\n    </Nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import axios from \"axios\";\r\n\r\nconst API_KEY = \"10923b261ba94d897ac6b81148314a3f\";\r\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\r\n\r\nexport interface IMovie {\r\n  id: number;\r\n  backdrop_path: string;\r\n  poster_path: string;\r\n  title: string;\r\n  overview: string;\r\n}\r\n\r\nexport interface IGetMoviesResult {\r\n  dates: {\r\n    maximum: string;\r\n    minimum: string;\r\n  };\r\n  page: number;\r\n  results: IMovie[];\r\n  total_pages: number;\r\n  total_results: number;\r\n}\r\n\r\nexport function getMovies() {\r\n  return axios\r\n    .get(`${BASE_PATH}/movie/now_playing?api_key=${API_KEY}`)\r\n    .then((response) => response.data);\r\n}\r\n\r\nexport function getTvLatest() {\r\n  return axios\r\n    .get(`${BASE_PATH}/tv/latest?api_key=${API_KEY}`)\r\n    .then((response) => response.data);\r\n}\r\n\r\nexport function getTvAiringToday() {\r\n  return axios\r\n    .get(`${BASE_PATH}/tv/airing_today?api_key=${API_KEY}`)\r\n    .then((response) => response.data);\r\n}\r\n\r\nexport function getTvPopular() {\r\n  return axios\r\n    .get(`${BASE_PATH}/tv/popular?api_key=${API_KEY}`)\r\n    .then((response) => response.data);\r\n}\r\n\r\nexport function getTvTopRated() {\r\n  return axios\r\n    .get(`${BASE_PATH}/tv/top_rated?api_key=${API_KEY}`)\r\n    .then((response) => response.data);\r\n}\r\n\r\nexport function getMovieSearch(tv_id: any) {\r\n  return axios\r\n    .get(`${BASE_PATH}/search/movie?api_key=${API_KEY}&query=${tv_id}&page=1`)\r\n    .then((response) => response.data);\r\n}\r\n\r\nexport function getTvSearch(tv_id: any) {\r\n  return axios\r\n    .get(`${BASE_PATH}/search/tv?api_key=${API_KEY}&query=${tv_id}&page=1`)\r\n    .then((response) => response.data);\r\n}\r\n","export function makeImagePath(id: string, format?: string) {\r\n  return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`;\r\n}\r\n","import { useState } from \"react\";\r\nimport { useQuery } from \"react-query\";\r\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\nimport { getMovies, IGetMoviesResult } from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\nimport { useNavigate, useMatch } from \"react-router-dom\";\r\n\r\nconst Wrapper = styled.div`\r\n  background: black;\r\n  padding-bottom: 200px;\r\n`;\r\n\r\nconst Loader = styled.div`\r\n  height: 20vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Banner = styled.div<{ bgPhoto: string }>`\r\n  padding: 60px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  background-image: radial-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\r\n    url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n`;\r\n\r\nexport const Title = styled.h2`\r\n  font-size: 48px;\r\n`;\r\n\r\nexport const Overview = styled.p`\r\n  margin-top: 1em;\r\n  font-size: 18px;\r\n  width: 50%;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const Slider = styled.div`\r\n  position: relative;\r\n  top: -100px;\r\n`;\r\n\r\nexport const Row = styled(motion.div)`\r\n  display: grid;\r\n  gap: 10px;\r\n  grid-template-columns: repeat(6, 1fr);\r\n  position: absolute;\r\n  width: 100%;\r\n`;\r\n\r\nexport const Box = styled(motion.div)<{ bgPhoto: string }>`\r\n  background-color: white;\r\n  background-image: url(${(props) => props.bgPhoto});\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 200px;\r\n  font-size: 66px;\r\n  cursor: pointer;\r\n\r\n  &:first-child {\r\n    transform-origin: center left;\r\n  }\r\n  &:last-child {\r\n    transform-origin: center right;\r\n  }\r\n`;\r\n\r\nexport const Info = styled(motion.div)`\r\n  padding: 10px;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n  opacity: 0;\r\n  position: absolute;\r\n  width: 100%;\r\n  bottom: 0;\r\n  h4 {\r\n    text-align: center;\r\n    font-size: 12px;\r\n  }\r\n`;\r\n\r\nexport const Overlay = styled(motion.div)`\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  opacity: 0;\r\n`;\r\n\r\nexport const BigMovie = styled(motion.div)`\r\n  position: absolute;\r\n  width: 400px;\r\n  height: 70vh;\r\n  left: 0;\r\n  right: 0;\r\n  margin: 0 auto;\r\n  border-radius: 15px;\r\n  overflow: hidden;\r\n  background-color: ${(props) => props.theme.black.lighter};\r\n`;\r\n\r\nexport const BigCover = styled.div`\r\n  width: 100%;\r\n  background-size: cover;\r\n  background-position: center center;\r\n  height: 300px;\r\n\r\n  display: flex;\r\n  align-items: end;\r\n`;\r\n\r\nexport const BigTitle = styled.h3`\r\n  color: ${(props) => props.theme.white.lighter};\r\n  padding: 15px 0.5em;\r\n  font-size: 32px;\r\n`;\r\n\r\nexport const BigOverview = styled.p`\r\n  padding: 1em 2em;\r\n  position: relative;\r\n  color: ${(props) => props.theme.white.lighter};\r\n  line-height: 1.6;\r\n  max-height: 240px;\r\n  overflow-y: auto;\r\n\r\n  // 스크롤바\r\n  &::-webkit-scrollbar {\r\n    width: 6px;\r\n  } /* 스크롤 바 */\r\n  &::-webkit-scrollbar-track {\r\n    background-color: \"transparent\";\r\n  } /* 스크롤 바 밑의 배경 */\r\n\r\n  &:hover {\r\n    // 스크롤바\r\n    &::-webkit-scrollbar {\r\n      width: 6px;\r\n    } /* 스크롤 바 */\r\n    &::-webkit-scrollbar-track {\r\n      background-color: transparent;\r\n    } /* 스크롤 바 밑의 배경 */\r\n    &::-webkit-scrollbar-thumb {\r\n      background-color: #e6e6e66f;\r\n      border-radius: 3px;\r\n    } /* 실질적 스크롤 바 */\r\n    &::-webkit-scrollbar-thumb:hover {\r\n      background: #e6e6e6;\r\n    } /* 실질적 스크롤 바 위에 마우스를 올려다 둘 때 */\r\n    &::-webkit-scrollbar-thumb:active {\r\n      background: #e6e6e6;\r\n    } /* 실질적 스크롤 바를 클릭할 때 */\r\n    &::-webkit-scrollbar-button {\r\n      display: none;\r\n    } /* 스크롤 바 상 하단 버튼 */\r\n  }\r\n`;\r\n\r\nconst rowVariants = {\r\n  hidden: {\r\n    x: window.outerWidth + 5,\r\n  },\r\n  visible: {\r\n    x: 0,\r\n  },\r\n  exit: {\r\n    x: -window.outerWidth - 5,\r\n  },\r\n};\r\n\r\nconst boxVariants = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    scale: 1.3,\r\n    y: -80,\r\n    transition: {\r\n      delay: 0.5,\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst infoVariants = {\r\n  hover: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.5,\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst offset = 6;\r\n\r\nfunction Home() {\r\n  const navigate = useNavigate();\r\n  const bigMovieMatch = useMatch(\"/movies/:movieId\");\r\n  const { scrollY } = useViewportScroll();\r\n  const { data, isLoading } = useQuery<IGetMoviesResult>(\r\n    [\"movies\", \"nowPlaying\"],\r\n    getMovies\r\n  );\r\n  const [index, setIndex] = useState(0);\r\n  const [leaving, setLeaving] = useState(false);\r\n  const incraseIndex = () => {\r\n    if (data) {\r\n      if (leaving) return;\r\n      toggleLeaving();\r\n      const totalMovies = data.results.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n    }\r\n  };\r\n  const toggleLeaving = () => setLeaving((prev) => !prev);\r\n  const onBoxClicked = (movieId: string) => {\r\n    navigate(`/movies/${movieId}`);\r\n  };\r\n  const onOverlayClick = () => navigate(\"/\");\r\n  const clickedMovie =\r\n    bigMovieMatch?.params.movieId &&\r\n    data?.results.find(\r\n      (movie) => movie.id === +String(bigMovieMatch.params.movieId)\r\n    );\r\n  return (\r\n    <Wrapper>\r\n      {isLoading ? (\r\n        <Loader>Loading...</Loader>\r\n      ) : (\r\n        <>\r\n          <Banner\r\n            onClick={incraseIndex}\r\n            bgPhoto={makeImagePath(data?.results[0].backdrop_path || \"\")}\r\n          >\r\n            <Title>{data?.results[0].title}</Title>\r\n            <Overview>{data?.results[0].overview}</Overview>\r\n          </Banner>\r\n          <Slider>\r\n            {/* onExitComplete는 애니메이션이 끝났을때 콜백 함수 호출 */}\r\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\r\n              <Row\r\n                variants={rowVariants}\r\n                initial=\"hidden\"\r\n                animate=\"visible\"\r\n                exit=\"exit\"\r\n                transition={{ type: \"tween\", duration: 1 }}\r\n                key={index}\r\n              >\r\n                {data?.results\r\n                  .slice(1)\r\n                  .slice(offset * index, offset * index + offset)\r\n                  .map((movie) => (\r\n                    <Box\r\n                      layoutId={movie.id + \"\"}\r\n                      key={movie.id}\r\n                      bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\r\n                      variants={boxVariants}\r\n                      whileHover=\"hover\"\r\n                      initial=\"normal\"\r\n                      transition={{ type: \"tween\" }}\r\n                      onClick={() => onBoxClicked(movie.id + \"\")}\r\n                    >\r\n                      <Info variants={infoVariants}>\r\n                        <h4>{movie.title}</h4>\r\n                      </Info>\r\n                    </Box>\r\n                  ))}\r\n              </Row>\r\n            </AnimatePresence>\r\n          </Slider>\r\n          <AnimatePresence>\r\n            {bigMovieMatch ? (\r\n              <>\r\n                <Overlay\r\n                  onClick={onOverlayClick}\r\n                  exit={{ opacity: 0 }}\r\n                  animate={{ opacity: 1 }}\r\n                />\r\n                <BigMovie\r\n                  style={{ top: scrollY.get() + 100 }}\r\n                  layoutId={bigMovieMatch.params.movieId}\r\n                >\r\n                  {clickedMovie && (\r\n                    <>\r\n                      <BigCover\r\n                        style={{\r\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\r\n                            clickedMovie.backdrop_path,\r\n                            \"w500\"\r\n                          )})`,\r\n                        }}\r\n                      >\r\n                        <BigTitle>{clickedMovie.title}</BigTitle>\r\n                      </BigCover>\r\n\r\n                      <BigOverview>{clickedMovie.overview}</BigOverview>\r\n                    </>\r\n                  )}\r\n                </BigMovie>\r\n              </>\r\n            ) : null}\r\n          </AnimatePresence>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\nexport default Home;\r\n","import { useQuery } from \"react-query\";\r\nimport { useLocation } from \"react-router\";\r\nimport styled from \"styled-components\";\r\nimport { getMovieSearch, getTvSearch } from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\n\r\nconst Wrapper = styled.div`\r\n  padding: 80px 1em 2em;\r\n`;\r\n\r\nconst ListWrap = styled.ul`\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n  gap: 20px;\r\n  & li {\r\n    min-height: 300px;\r\n  }\r\n`;\r\n\r\nconst ImgBox = styled.div`\r\n  & img {\r\n    max-width: 100%;\r\n    width: 100%;\r\n    vertical-align: top;\r\n  }\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin: 1em 0.5em;\r\n  display: block;\r\n  font-size: 32px;\r\n  font-weight: bold;\r\n`;\r\n\r\nfunction Search() {\r\n  const location = useLocation();\r\n  const keyword = new URLSearchParams(location.search).get(\"keyword\");\r\n  const { data, isLoading } = useQuery([\"movie\", \"search\"], () =>\r\n    getMovieSearch(keyword)\r\n  );\r\n  const { data: tvData, isLoading: tvLoading } = useQuery(\r\n    [\"tv\", \"search\"],\r\n    () => getTvSearch(keyword)\r\n  );\r\n  return (\r\n    <Wrapper>\r\n      {isLoading ? (\r\n        \"Loading...\"\r\n      ) : (\r\n        <>\r\n          <Title>Movie Search</Title>\r\n          <ListWrap>\r\n            {data.results.length >= 1 &&\r\n              data.results.map((item: any) => (\r\n                <li>\r\n                  <ImgBox>\r\n                    <img src={makeImagePath(item.poster_path, \"w500\")} alt=\"\" />\r\n                  </ImgBox>\r\n                  <div>{item.title}</div>\r\n                </li>\r\n              ))}\r\n          </ListWrap>\r\n          <hr />\r\n\r\n          <Title>TV Search</Title>\r\n          <ListWrap>\r\n            {tvData.results.length >= 1 &&\r\n              tvData.results.map((item: any) => (\r\n                <li>\r\n                  <ImgBox>\r\n                    <img src={makeImagePath(item.poster_path, \"w500\")} alt=\"\" />\r\n                  </ImgBox>\r\n                  <div>{item.title}</div>\r\n                </li>\r\n              ))}\r\n          </ListWrap>\r\n        </>\r\n      )}\r\n    </Wrapper>\r\n  );\r\n}\r\nexport default Search;\r\n","import { useQuery } from \"react-query\";\r\nimport { AnimatePresence, useViewportScroll } from \"framer-motion\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  getTvAiringToday,\r\n  getTvPopular,\r\n  getTvTopRated,\r\n  getMovies,\r\n} from \"../api\";\r\nimport { makeImagePath } from \"../utils\";\r\nimport {\r\n  Banner,\r\n  Title,\r\n  Overview,\r\n  Slider,\r\n  Row,\r\n  Box,\r\n  Info,\r\n  Overlay,\r\n  BigMovie,\r\n  BigCover,\r\n  BigTitle,\r\n  BigOverview,\r\n} from \"./Home\";\r\nimport { useMatch, useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\n\r\nconst Section = styled.div`\r\n  position: relative;\r\n  margin: 2em 1em;\r\n  height: 200px;\r\n`;\r\n\r\nconst TitleArea = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin: 80px 1em 120px;\r\n\r\n  & h1 {\r\n    font-size: 32px;\r\n    font-weight: 500;\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  padding: 5px 10px;\r\n  border: 0;\r\n  border-radius: 3px;\r\n  background: #ff000099;\r\n  color: #fff;\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    background-color: #bb4242;\r\n  }\r\n`;\r\n\r\nconst rowVariants = {\r\n  hidden: {\r\n    x: window.outerWidth + 5,\r\n  },\r\n  visible: {\r\n    x: 0,\r\n  },\r\n  exit: {\r\n    x: -window.outerWidth - 5,\r\n  },\r\n};\r\n\r\nconst boxVariants = {\r\n  normal: {\r\n    scale: 1,\r\n  },\r\n  hover: {\r\n    scale: 1.3,\r\n    y: -80,\r\n    transition: {\r\n      delay: 0.5,\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst infoVariants = {\r\n  hover: {\r\n    opacity: 1,\r\n    transition: {\r\n      delay: 0.5,\r\n      duaration: 0.1,\r\n      type: \"tween\",\r\n    },\r\n  },\r\n};\r\n\r\nconst offset = 6;\r\n\r\nfunction Tv() {\r\n  const { data: latest, isLoading: latestLoading } = useQuery(\r\n    [\"tv\", \"latest\"],\r\n    getMovies\r\n  );\r\n  const { data: today, isLoading: todayLoading } = useQuery(\r\n    [\"tv\", \"today\"],\r\n    getTvAiringToday\r\n  );\r\n  const { data, isLoading } = useQuery([\"tv\", \"default\"], getTvPopular);\r\n  const { data: topRated, isLoading: topRatedLoading } = useQuery(\r\n    [\"tv\", \"topRate\"],\r\n    getTvTopRated\r\n  );\r\n  console.log(data);\r\n  const navigate = useNavigate();\r\n  const bigMovieMatch = useMatch(\"/tv/:tvId\");\r\n  const { scrollY } = useViewportScroll();\r\n  const [index, setIndex] = useState(0);\r\n  const [todayState, setTodayState] = useState(0);\r\n  const [topRatedState, setTopRatedState] = useState(0);\r\n  const [leaving, setLeaving] = useState(false);\r\n  const incraseIndex = (items: any, type?: string) => {\r\n    if (items) {\r\n      if (leaving) return;\r\n      toggleLeaving();\r\n      const totalMovies = items.results.length - 1;\r\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\r\n      if (type === \"topRated\") {\r\n        setTopRatedState((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n      } else if (type === \"today\") {\r\n        setTodayState((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n      } else {\r\n        setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\r\n      }\r\n    }\r\n  };\r\n  const toggleLeaving = () => setLeaving((prev) => !prev);\r\n  const onBoxClicked = (tvId: string) => {\r\n    navigate(`/tv/${tvId}`);\r\n  };\r\n  const onOverlayClick = () => navigate(\"/tv\");\r\n  const clickedMovie =\r\n    bigMovieMatch?.params.tvId &&\r\n    data?.results.find(\r\n      (movie: any) => movie.id === +String(bigMovieMatch.params.tvId)\r\n    );\r\n  const clickedTopReated =\r\n    bigMovieMatch?.params.tvId &&\r\n    topRated?.results.find(\r\n      (movie: any) => movie.id === +String(bigMovieMatch.params.tvId)\r\n    );\r\n  return (\r\n    <>\r\n      {isLoading ? (\r\n        \"Loading...\"\r\n      ) : (\r\n        <>\r\n          <Banner\r\n            onClick={incraseIndex}\r\n            bgPhoto={makeImagePath(latest.results[1]?.backdrop_path || \"\")}\r\n          >\r\n            <Title>{latest?.results[1].title}</Title>\r\n            <Overview>{latest?.results[1].overview}</Overview>\r\n          </Banner>\r\n\r\n          <Section>\r\n            <TitleArea>\r\n              <h1>Airing Today</h1>\r\n              <Button onClick={() => incraseIndex(today, \"today\")}>NEXT</Button>\r\n            </TitleArea>\r\n\r\n            <Slider>\r\n              {/* onExitComplete는 애니메이션이 끝났을때 콜백 함수 호출 */}\r\n              <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\r\n                <Row\r\n                  variants={rowVariants}\r\n                  initial=\"hidden\"\r\n                  animate=\"visible\"\r\n                  exit=\"exit\"\r\n                  transition={{ type: \"tween\", duration: 1 }}\r\n                  key={todayState}\r\n                >\r\n                  {today?.results\r\n                    .slice(1)\r\n                    .slice(offset * todayState, offset * todayState + offset)\r\n                    .map((tv: any) => (\r\n                      <Box\r\n                        layoutId={tv.id + \"today\"}\r\n                        key={tv.id}\r\n                        bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\r\n                        variants={boxVariants}\r\n                        whileHover=\"hover\"\r\n                        initial=\"normal\"\r\n                        transition={{ type: \"tween\" }}\r\n                      >\r\n                        <Info variants={infoVariants}>\r\n                          <h4>{tv.name}</h4>\r\n                        </Info>\r\n                      </Box>\r\n                    ))}\r\n                </Row>\r\n              </AnimatePresence>\r\n            </Slider>\r\n          </Section>\r\n\r\n          <Section>\r\n            <TitleArea>\r\n              <h1>Popular</h1>\r\n              <Button onClick={() => incraseIndex(data)}>NEXT</Button>\r\n            </TitleArea>\r\n\r\n            <Slider>\r\n              {/* onExitComplete는 애니메이션이 끝났을때 콜백 함수 호출 */}\r\n              <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\r\n                <Row\r\n                  variants={rowVariants}\r\n                  initial=\"hidden\"\r\n                  animate=\"visible\"\r\n                  exit=\"exit\"\r\n                  transition={{ type: \"tween\", duration: 1 }}\r\n                  key={index}\r\n                >\r\n                  {data?.results\r\n                    .slice(1)\r\n                    .slice(offset * index, offset * index + offset)\r\n                    .map((tv: any) => (\r\n                      <Box\r\n                        layoutId={tv.id + \"popular\"}\r\n                        key={tv.id}\r\n                        bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\r\n                        variants={boxVariants}\r\n                        whileHover=\"hover\"\r\n                        initial=\"normal\"\r\n                        transition={{ type: \"tween\" }}\r\n                        onClick={() => onBoxClicked(tv.id + \"\")}\r\n                      >\r\n                        <Info variants={infoVariants}>\r\n                          <h4>{tv.name}</h4>\r\n                        </Info>\r\n                      </Box>\r\n                    ))}\r\n                </Row>\r\n              </AnimatePresence>\r\n            </Slider>\r\n            <AnimatePresence>\r\n              {bigMovieMatch ? (\r\n                <>\r\n                  <Overlay\r\n                    onClick={onOverlayClick}\r\n                    exit={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                  />\r\n                  <BigMovie\r\n                    style={{ top: scrollY.get() + 100 }}\r\n                    layoutId={bigMovieMatch.params.tvId + \"popular\"}\r\n                  >\r\n                    {clickedMovie && (\r\n                      <>\r\n                        <BigCover\r\n                          style={{\r\n                            backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\r\n                              clickedMovie.backdrop_path,\r\n                              \"w500\"\r\n                            )})`,\r\n                          }}\r\n                        >\r\n                          <BigTitle>{clickedMovie.title}</BigTitle>\r\n                        </BigCover>\r\n\r\n                        <BigOverview>{clickedMovie.overview}</BigOverview>\r\n                      </>\r\n                    )}\r\n                  </BigMovie>\r\n                </>\r\n              ) : null}\r\n            </AnimatePresence>\r\n          </Section>\r\n\r\n          <Section>\r\n            <TitleArea>\r\n              <h1>Top Rated</h1>\r\n              <Button onClick={() => incraseIndex(topRated, \"topRated\")}>\r\n                NEXT\r\n              </Button>\r\n            </TitleArea>\r\n\r\n            <Slider>\r\n              {/* onExitComplete는 애니메이션이 끝났을때 콜백 함수 호출 */}\r\n              <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\r\n                <Row\r\n                  variants={rowVariants}\r\n                  initial=\"hidden\"\r\n                  animate=\"visible\"\r\n                  exit=\"exit\"\r\n                  transition={{ type: \"tween\", duration: 1 }}\r\n                  key={topRatedState}\r\n                >\r\n                  {topRated?.results\r\n                    .slice(1)\r\n                    .slice(\r\n                      offset * topRatedState,\r\n                      offset * topRatedState + offset\r\n                    )\r\n                    .map((tv: any) => (\r\n                      <Box\r\n                        layoutId={tv.id + \"topRated\"}\r\n                        key={tv.id}\r\n                        bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\r\n                        variants={boxVariants}\r\n                        whileHover=\"hover\"\r\n                        initial=\"normal\"\r\n                        transition={{ type: \"tween\" }}\r\n                        onClick={() => onBoxClicked(tv.id + \"\")}\r\n                      >\r\n                        <Info variants={infoVariants}>\r\n                          <h4>{tv.name}</h4>\r\n                        </Info>\r\n                      </Box>\r\n                    ))}\r\n                </Row>\r\n              </AnimatePresence>\r\n            </Slider>\r\n            <AnimatePresence>\r\n              {bigMovieMatch ? (\r\n                <>\r\n                  <Overlay\r\n                    onClick={onOverlayClick}\r\n                    exit={{ opacity: 0 }}\r\n                    animate={{ opacity: 1 }}\r\n                  />\r\n                  <BigMovie\r\n                    style={{ top: scrollY.get() + 100 }}\r\n                    layoutId={bigMovieMatch.params.tvId + \"topRated\"}\r\n                  >\r\n                    {clickedTopReated && (\r\n                      <>\r\n                        <BigCover\r\n                          style={{\r\n                            backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\r\n                              clickedTopReated.backdrop_path,\r\n                              \"w500\"\r\n                            )})`,\r\n                          }}\r\n                        >\r\n                          <BigTitle>{clickedTopReated.title}</BigTitle>\r\n                        </BigCover>\r\n\r\n                        <BigOverview>{clickedTopReated.overview}</BigOverview>\r\n                      </>\r\n                    )}\r\n                  </BigMovie>\r\n                </>\r\n              ) : null}\r\n            </AnimatePresence>\r\n          </Section>\r\n          <Section />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default Tv;\r\n","import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\r\nimport Header from \"./Components/Header\";\r\nimport Home from \"./Routes/Home\";\r\nimport Search from \"./Routes/Search\";\r\nimport Tv from \"./Routes/Tv\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Routes>\r\n        <Route path=\"/nomflix/\" element={<Home />}>\r\n          <Route path=\"/nomflix/movies/:movieId\" />\r\n        </Route>\r\n        <Route path=\"/nomflix/tv\" element={<Tv />}>\r\n          <Route path=\"/nomflix/tv/:tvId\" />\r\n        </Route>\r\n        <Route path=\"/nomflix/search\" element={<Search />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { RecoilRoot } from \"recoil\";\r\nimport { createGlobalStyle, ThemeProvider } from \"styled-components\";\r\nimport App from \"./App\";\r\nimport { QueryClient, QueryClientProvider } from \"react-query\";\r\nimport { theme } from \"./theme\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\r\nhtml, body, div, span, applet, object, iframe,\r\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\r\na, abbr, acronym, address, big, cite, code,\r\ndel, dfn, em, img, ins, kbd, q, s, samp,\r\nsmall, strike, strong, sub, sup, tt, var,\r\nb, u, i, center,\r\ndl, dt, dd, menu, ol, ul, li,\r\nfieldset, form, label, legend,\r\ntable, caption, tbody, tfoot, thead, tr, th, td,\r\narticle, aside, canvas, details, embed,\r\nfigure, figcaption, footer, header, hgroup,\r\nmain, menu, nav, output, ruby, section, summary,\r\ntime, mark, audio, video {\r\n  margin: 0;\r\n  padding: 0;\r\n  border: 0;\r\n  font-size: 100%;\r\n  font: inherit;\r\n  vertical-align: baseline;\r\n}\r\n/* HTML5 display-role reset for older browsers */\r\narticle, aside, details, figcaption, figure,\r\nfooter, header, hgroup, main, menu, nav, section {\r\n  display: block;\r\n}\r\n/* HTML5 hidden-attribute fix for newer browsers */\r\n*[hidden] {\r\n    display: none;\r\n}\r\nbody {\r\n  line-height: 1;\r\n}\r\nmenu, ol, ul {\r\n  list-style: none;\r\n}\r\nblockquote, q {\r\n  quotes: none;\r\n}\r\nblockquote:before, blockquote:after,\r\nq:before, q:after {\r\n  content: '';\r\n  content: none;\r\n}\r\ntable {\r\n  border-collapse: collapse;\r\n  border-spacing: 0;\r\n}\r\n* {\r\n  box-sizing: border-box;\r\n}\r\nbody {\r\n  font-weight: 300;\r\n  font-family: 'Source Sans Pro', sans-serif;\r\n  color:${(props) => props.theme.white.darker};\r\n  line-height: 1.2;\r\n  background: black;\r\n  \r\n}\r\na {\r\n  text-decoration:none;\r\n  color:inherit;\r\n}\r\n`;\r\nconst client = new QueryClient();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <RecoilRoot>\r\n      <QueryClientProvider client={client}>\r\n        <ThemeProvider theme={theme}>\r\n          <GlobalStyle />\r\n          <App />\r\n        </ThemeProvider>\r\n      </QueryClientProvider>\r\n    </RecoilRoot>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","import { DefaultTheme } from \"styled-components\";\r\n\r\nexport const theme: DefaultTheme = {\r\n  red: \"#E51013\",\r\n  black: {\r\n    veryDark: \"#141414\",\r\n    darker: \"#181818\",\r\n    lighter: \"#2F2F2F\",\r\n  },\r\n  white: {\r\n    lighter: \"#fff\",\r\n    darker: \"#e5e5e5\",\r\n  },\r\n};\r\n"],"sourceRoot":""}